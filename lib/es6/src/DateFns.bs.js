// Generated by ReScript, PLEASE EDIT WITH CARE

import Parse from "date-fns/fp/parse";
import Format from "date-fns/fp/format";
import SetDay from "date-fns/fp/setDay";
import AddDays from "date-fns/fp/addDays";
import IsAfter from "date-fns/fp/isAfter";
import IsEqual from "date-fns/fp/isEqual";
import SetWeek from "date-fns/fp/setWeek";
import SetYear from "date-fns/fp/setYear";
import SubDays from "date-fns/fp/subDays";
import AddHours from "date-fns/fp/addHours";
import AddWeeks from "date-fns/fp/addWeeks";
import AddYears from "date-fns/fp/addYears";
import IsBefore from "date-fns/fp/isBefore";
import SetHours from "date-fns/fp/setHours";
import SetMonth from "date-fns/fp/setMonth";
import SubHours from "date-fns/fp/subHours";
import SubWeeks from "date-fns/fp/subWeeks";
import SubYears from "date-fns/fp/subYears";
import AddMonths from "date-fns/fp/addMonths";
import ClosestTo from "date-fns/fp/closestTo";
import IsSameDay from "date-fns/fp/isSameDay";
import SetISODay from "date-fns/fp/setISODay";
import SubMonths from "date-fns/fp/subMonths";
import AddMinutes from "date-fns/fp/addMinutes";
import AddSeconds from "date-fns/fp/addSeconds";
import CompareAsc from "date-fns/fp/compareAsc";
import IsSameHour from "date-fns/fp/isSameHour";
import IsSameWeek from "date-fns/fp/isSameWeek";
import IsSameYear from "date-fns/fp/isSameYear";
import SetMinutes from "date-fns/fp/setMinutes";
import SetSeconds from "date-fns/fp/setSeconds";
import SubMinutes from "date-fns/fp/subMinutes";
import SubSeconds from "date-fns/fp/subSeconds";
import CompareDesc from "date-fns/fp/compareDesc";
import IsSameMonth from "date-fns/fp/isSameMonth";
import LightFormat from "date-fns/fp/lightFormat";
import IsSameMinute from "date-fns/fp/isSameMinute";
import IsSameSecond from "date-fns/fp/isSameSecond";
import SetDayOfYear from "date-fns/fp/setDayOfYear";
import ClosestIndexTo from "date-fns/fp/closestIndexTo";
import FormatDistance from "date-fns/fp/formatDistance";
import FormatRelative from "date-fns/fp/formatRelative";
import AddBusinessDays from "date-fns/fp/addBusinessDays";
import AddMilliseconds from "date-fns/fp/addMilliseconds";
import SetMilliseconds from "date-fns/fp/setMilliseconds";
import SubMilliseconds from "date-fns/fp/subMilliseconds";
import DifferenceInDays from "date-fns/fp/differenceInDays";
import IsLastDayOfMonth from "date-fns/fp/isLastDayOfMonth";
import DifferenceInHours from "date-fns/fp/differenceInHours";
import DifferenceInWeeks from "date-fns/fp/differenceInWeeks";
import DifferenceInYears from "date-fns/fp/differenceInYears";
import FormatWithOptions from "date-fns/fp/formatWithOptions";
import IsFirstDayOfMonth from "date-fns/fp/isFirstDayOfMonth";
import DifferenceInMonths from "date-fns/fp/differenceInMonths";
import DifferenceInMinutes from "date-fns/fp/differenceInMinutes";
import DifferenceInSeconds from "date-fns/fp/differenceInSeconds";
import FormatDistanceStrict from "date-fns/fp/formatDistanceStrict";
import DifferenceInBusinessDays from "date-fns/fp/differenceInBusinessDays";
import DifferenceInCalendarDays from "date-fns/fp/differenceInCalendarDays";
import DifferenceInMilliseconds from "date-fns/fp/differenceInMilliseconds";
import DifferenceInCalendarYears from "date-fns/fp/differenceInCalendarYears";
import FormatDistanceWithOptions from "date-fns/fp/formatDistanceWithOptions";
import DifferenceInCalendarMonths from "date-fns/fp/differenceInCalendarMonths";
import * as ReasonDateFnsCurryHelpers$ReasonDateFns from "./ReasonDateFnsCurryHelpers.bs.js";
import FormatDistanceStrictWithOptions from "date-fns/fp/formatDistanceStrictWithOptions";

var Locales = {};

var partial_arg = ClosestIndexTo;

function closestIndexTo(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg, param, param$1);
}

var partial_arg$1 = FormatWithOptions;

function formatWithOptions(param, param$1, param$2) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry3(partial_arg$1, param, param$1, param$2);
}

var partial_arg$2 = Format;

function format(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$2, param, param$1);
}

var partial_arg$3 = ClosestTo;

function closestTo(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$3, param, param$1);
}

var partial_arg$4 = CompareAsc;

function compareAsc(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$4, param, param$1);
}

var partial_arg$5 = CompareDesc;

function compareDesc(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$5, param, param$1);
}

var partial_arg$6 = FormatDistance;

function formatDistance(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$6, param, param$1);
}

var partial_arg$7 = FormatDistanceWithOptions;

function formatDistanceWithOptions(param, param$1, param$2) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry3(partial_arg$7, param, param$1, param$2);
}

var partial_arg$8 = FormatDistanceStrict;

function formatDistanceStrict(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$8, param, param$1);
}

var partial_arg$9 = FormatDistanceStrictWithOptions;

function formatDistanceStrictWithOptions(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$9, param, param$1);
}

var partial_arg$10 = FormatRelative;

function formatRelative(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$10, param, param$1);
}

var partial_arg$11 = IsAfter;

function isAfter(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$11, param, param$1);
}

var partial_arg$12 = IsBefore;

function isBefore(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$12, param, param$1);
}

var partial_arg$13 = IsEqual;

function isEqual(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$13, param, param$1);
}

var partial_arg$14 = LightFormat;

function lightFormat(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$14, param, param$1);
}

var partial_arg$15 = Parse;

function parse(param, param$1, param$2) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry3(partial_arg$15, param, param$1, param$2);
}

var partial_arg$16 = AddBusinessDays;

function addBusinessDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$16, param, param$1);
}

var partial_arg$17 = AddDays;

function addDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$17, param, param$1);
}

var partial_arg$18 = DifferenceInBusinessDays;

function differenceInBusinessDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$18, param, param$1);
}

var partial_arg$19 = DifferenceInCalendarDays;

function differenceInCalendarDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$19, param, param$1);
}

var partial_arg$20 = DifferenceInDays;

function differenceInDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$20, param, param$1);
}

var partial_arg$21 = IsSameDay;

function isSameDay(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$21, param, param$1);
}

var partial_arg$22 = SetDayOfYear;

function setDayOfYear(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$22, param, param$1);
}

var partial_arg$23 = SubDays;

function subDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$23, param, param$1);
}

var partial_arg$24 = AddMilliseconds;

function addMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$24, param, param$1);
}

var partial_arg$25 = DifferenceInMilliseconds;

function differenceInMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$25, param, param$1);
}

var partial_arg$26 = SetMilliseconds;

function setMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$26, param, param$1);
}

var partial_arg$27 = SubMilliseconds;

function subMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$27, param, param$1);
}

var partial_arg$28 = AddSeconds;

function addSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$28, param, param$1);
}

var partial_arg$29 = DifferenceInSeconds;

function differenceInSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$29, param, param$1);
}

var partial_arg$30 = SetSeconds;

function setSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$30, param, param$1);
}

var partial_arg$31 = IsSameSecond;

function isSameSecond(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$31, param, param$1);
}

var partial_arg$32 = SubSeconds;

function subSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$32, param, param$1);
}

var partial_arg$33 = AddMinutes;

function addMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$33, param, param$1);
}

var partial_arg$34 = DifferenceInMinutes;

function differenceInMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$34, param, param$1);
}

var partial_arg$35 = SetMinutes;

function setMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$35, param, param$1);
}

var partial_arg$36 = IsSameMinute;

function isSameMinute(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$36, param, param$1);
}

var partial_arg$37 = SubMinutes;

function subMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$37, param, param$1);
}

var partial_arg$38 = AddHours;

function addHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$38, param, param$1);
}

var partial_arg$39 = DifferenceInHours;

function differenceInHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$39, param, param$1);
}

var partial_arg$40 = SetHours;

function setHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$40, param, param$1);
}

var partial_arg$41 = IsSameHour;

function isSameHour(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$41, param, param$1);
}

var partial_arg$42 = SubHours;

function subHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$42, param, param$1);
}

var partial_arg$43 = SetDay;

function setDay(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$43, param, param$1);
}

var partial_arg$44 = SetDay;

function setDayWithOptions(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$44, param, param$1);
}

var partial_arg$45 = SetISODay;

function setISODay(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$45, param, param$1);
}

var partial_arg$46 = AddWeeks;

function addWeeks(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$46, param, param$1);
}

var partial_arg$47 = DifferenceInWeeks;

function differenceInWeeks(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$47, param, param$1);
}

var partial_arg$48 = SetWeek;

function setWeek(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$48, param, param$1);
}

var partial_arg$49 = IsSameWeek;

function isSameWeek(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$49, param, param$1);
}

var partial_arg$50 = SubWeeks;

function subWeeks(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$50, param, param$1);
}

var partial_arg$51 = AddMonths;

function addMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$51, param, param$1);
}

var partial_arg$52 = DifferenceInMonths;

function differenceInMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$52, param, param$1);
}

var partial_arg$53 = DifferenceInCalendarMonths;

function differenceInCalendarMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$53, param, param$1);
}

var partial_arg$54 = SetMonth;

function setMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$54, param, param$1);
}

var partial_arg$55 = IsSameMonth;

function isSameMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$55, param, param$1);
}

var partial_arg$56 = SubMonths;

function subMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$56, param, param$1);
}

var partial_arg$57 = IsFirstDayOfMonth;

function isFirstDayOfMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$57, param, param$1);
}

var partial_arg$58 = IsLastDayOfMonth;

function isLastDayOfMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$58, param, param$1);
}

var partial_arg$59 = AddYears;

function addYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$59, param, param$1);
}

var partial_arg$60 = DifferenceInYears;

function differenceInYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$60, param, param$1);
}

var partial_arg$61 = DifferenceInCalendarYears;

function differenceInCalendarYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$61, param, param$1);
}

var partial_arg$62 = SetYear;

function setYear(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$62, param, param$1);
}

var partial_arg$63 = IsSameYear;

function isSameYear(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$63, param, param$1);
}

var partial_arg$64 = SubYears;

function subYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$64, param, param$1);
}

export {
  Locales ,
  closestIndexTo ,
  formatWithOptions ,
  format ,
  closestTo ,
  compareAsc ,
  compareDesc ,
  formatDistance ,
  formatDistanceWithOptions ,
  formatDistanceStrict ,
  formatDistanceStrictWithOptions ,
  formatRelative ,
  isAfter ,
  isBefore ,
  isEqual ,
  lightFormat ,
  parse ,
  addBusinessDays ,
  addDays ,
  differenceInBusinessDays ,
  differenceInCalendarDays ,
  differenceInDays ,
  isSameDay ,
  setDayOfYear ,
  subDays ,
  addMilliseconds ,
  differenceInMilliseconds ,
  setMilliseconds ,
  subMilliseconds ,
  addSeconds ,
  differenceInSeconds ,
  setSeconds ,
  isSameSecond ,
  subSeconds ,
  addMinutes ,
  differenceInMinutes ,
  setMinutes ,
  isSameMinute ,
  subMinutes ,
  addHours ,
  differenceInHours ,
  setHours ,
  isSameHour ,
  subHours ,
  setDay ,
  setDayWithOptions ,
  setISODay ,
  addWeeks ,
  differenceInWeeks ,
  setWeek ,
  isSameWeek ,
  subWeeks ,
  addMonths ,
  differenceInMonths ,
  differenceInCalendarMonths ,
  setMonth ,
  isSameMonth ,
  subMonths ,
  isFirstDayOfMonth ,
  isLastDayOfMonth ,
  addYears ,
  differenceInYears ,
  differenceInCalendarYears ,
  setYear ,
  isSameYear ,
  subYears ,
  
}
/* partial_arg Not a pure module */
