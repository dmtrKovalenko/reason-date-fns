// Generated by BUCKLESCRIPT VERSION 4.0.18, PLEASE EDIT WITH CARE
'use strict';

var Parse = require("date-fns/fp/parse");
var Format = require("date-fns/fp/format");
var SetDay = require("date-fns/fp/setDay");
var AddDays = require("date-fns/fp/addDays");
var IsAfter = require("date-fns/fp/isAfter");
var IsEqual = require("date-fns/fp/isEqual");
var SetWeek = require("date-fns/fp/setWeek");
var SetYear = require("date-fns/fp/setYear");
var SubDays = require("date-fns/fp/subDays");
var AddHours = require("date-fns/fp/addHours");
var AddWeeks = require("date-fns/fp/addWeeks");
var AddYears = require("date-fns/fp/addYears");
var IsBefore = require("date-fns/fp/isBefore");
var SetHours = require("date-fns/fp/setHours");
var SetMonth = require("date-fns/fp/setMonth");
var SubHours = require("date-fns/fp/subHours");
var SubWeeks = require("date-fns/fp/subWeeks");
var SubYears = require("date-fns/fp/subYears");
var AddMonths = require("date-fns/fp/addMonths");
var ClosestTo = require("date-fns/fp/closestTo");
var IsSameDay = require("date-fns/fp/isSameDay");
var SetISODay = require("date-fns/fp/setISODay");
var SubMonths = require("date-fns/fp/subMonths");
var AddMinutes = require("date-fns/fp/addMinutes");
var AddSeconds = require("date-fns/fp/addSeconds");
var CompareAsc = require("date-fns/fp/compareAsc");
var IsSameHour = require("date-fns/fp/isSameHour");
var IsSameWeek = require("date-fns/fp/isSameWeek");
var IsSameYear = require("date-fns/fp/isSameYear");
var SetMinutes = require("date-fns/fp/setMinutes");
var SetSeconds = require("date-fns/fp/setSeconds");
var SubMinutes = require("date-fns/fp/subMinutes");
var SubSeconds = require("date-fns/fp/subSeconds");
var CompareDesc = require("date-fns/fp/compareDesc");
var IsSameMonth = require("date-fns/fp/isSameMonth");
var LightFormat = require("date-fns/fp/lightFormat");
var IsSameMinute = require("date-fns/fp/isSameMinute");
var IsSameSecond = require("date-fns/fp/isSameSecond");
var SetDayOfYear = require("date-fns/fp/setDayOfYear");
var ClosestIndexTo = require("date-fns/fp/closestIndexTo");
var FormatDistance = require("date-fns/fp/formatDistance");
var FormatRelative = require("date-fns/fp/formatRelative");
var AddBusinessDays = require("date-fns/fp/addBusinessDays");
var AddMilliseconds = require("date-fns/fp/addMilliseconds");
var SetMilliseconds = require("date-fns/fp/setMilliseconds");
var SubMilliseconds = require("date-fns/fp/subMilliseconds");
var DifferenceInDays = require("date-fns/fp/differenceInDays");
var IsLastDayOfMonth = require("date-fns/fp/isLastDayOfMonth");
var DifferenceInHours = require("date-fns/fp/differenceInHours");
var DifferenceInWeeks = require("date-fns/fp/differenceInWeeks");
var DifferenceInYears = require("date-fns/fp/differenceInYears");
var FormatWithOptions = require("date-fns/fp/formatWithOptions");
var IsFirstDayOfMonth = require("date-fns/fp/isFirstDayOfMonth");
var SetDayWithOptions = require("date-fns/fp/setDayWithOptions");
var DifferenceInMonths = require("date-fns/fp/differenceInMonths");
var DifferenceInMinutes = require("date-fns/fp/differenceInMinutes");
var DifferenceInSeconds = require("date-fns/fp/differenceInSeconds");
var FormatDistanceStrict = require("date-fns/fp/formatDistanceStrict");
var DifferenceInBusinessDays = require("date-fns/fp/differenceInBusinessDays");
var DifferenceInCalendarDays = require("date-fns/fp/differenceInCalendarDays");
var DifferenceInMilliseconds = require("date-fns/fp/differenceInMilliseconds");
var DifferenceInCalendarYears = require("date-fns/fp/differenceInCalendarYears");
var FormatDistanceWithOptions = require("date-fns/fp/formatDistanceWithOptions");
var DifferenceInCalendarMonths = require("date-fns/fp/differenceInCalendarMonths");
var ReasonDateFnsCurryHelpers$ReasonDateFns = require("./ReasonDateFnsCurryHelpers.bs.js");
var FormatDistanceStrictWithOptions = require("date-fns/fp/formatDistanceStrictWithOptions");

var Locales = /* module */[];

var partial_arg = ClosestIndexTo.default;

function closestIndexTo(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg, param, param$1);
}

var partial_arg$1 = FormatWithOptions.default;

function formatWithOptions(param, param$1, param$2) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry3(partial_arg$1, param, param$1, param$2);
}

var partial_arg$2 = Format.default;

function format(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$2, param, param$1);
}

var partial_arg$3 = ClosestTo.default;

function closestTo(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$3, param, param$1);
}

var partial_arg$4 = CompareAsc.default;

function compareAsc(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$4, param, param$1);
}

var partial_arg$5 = CompareDesc.default;

function compareDesc(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$5, param, param$1);
}

var partial_arg$6 = FormatDistance.default;

function formatDistance(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$6, param, param$1);
}

var partial_arg$7 = FormatDistanceWithOptions.default;

function formatDistanceWithOptions(param, param$1, param$2) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry3(partial_arg$7, param, param$1, param$2);
}

var partial_arg$8 = FormatDistanceStrict.default;

function formatDistanceStrict(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$8, param, param$1);
}

var partial_arg$9 = FormatDistanceStrictWithOptions.default;

function formatDistanceStrictWithOptions(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$9, param, param$1);
}

var partial_arg$10 = FormatRelative.default;

function formatRelative(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$10, param, param$1);
}

var partial_arg$11 = IsAfter.default;

function isAfter(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$11, param, param$1);
}

var partial_arg$12 = IsBefore.default;

function isBefore(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$12, param, param$1);
}

var partial_arg$13 = IsEqual.default;

function isEqual(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$13, param, param$1);
}

var partial_arg$14 = LightFormat.default;

function lightFormat(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$14, param, param$1);
}

var partial_arg$15 = Parse.default;

function parse(param, param$1, param$2) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry3(partial_arg$15, param, param$1, param$2);
}

var partial_arg$16 = AddBusinessDays.default;

function addBusinessDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$16, param, param$1);
}

var partial_arg$17 = AddDays.default;

function addDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$17, param, param$1);
}

var partial_arg$18 = DifferenceInBusinessDays.default;

function differenceInBusinessDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$18, param, param$1);
}

var partial_arg$19 = DifferenceInCalendarDays.default;

function differenceInCalendarDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$19, param, param$1);
}

var partial_arg$20 = DifferenceInDays.default;

function differenceInDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$20, param, param$1);
}

var partial_arg$21 = IsSameDay.default;

function isSameDay(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$21, param, param$1);
}

var partial_arg$22 = SetDayOfYear.default;

function setDayOfYear(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$22, param, param$1);
}

var partial_arg$23 = SubDays.default;

function subDays(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$23, param, param$1);
}

var partial_arg$24 = AddMilliseconds.default;

function addMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$24, param, param$1);
}

var partial_arg$25 = DifferenceInMilliseconds.default;

function differenceInMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$25, param, param$1);
}

var partial_arg$26 = SetMilliseconds.default;

function setMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$26, param, param$1);
}

var partial_arg$27 = SubMilliseconds.default;

function subMilliseconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$27, param, param$1);
}

var partial_arg$28 = AddSeconds.default;

function addSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$28, param, param$1);
}

var partial_arg$29 = DifferenceInSeconds.default;

function differenceInSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$29, param, param$1);
}

var partial_arg$30 = SetSeconds.default;

function setSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$30, param, param$1);
}

var partial_arg$31 = IsSameSecond.default;

function isSameSecond(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$31, param, param$1);
}

var partial_arg$32 = SubSeconds.default;

function subSeconds(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$32, param, param$1);
}

var partial_arg$33 = AddMinutes.default;

function addMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$33, param, param$1);
}

var partial_arg$34 = DifferenceInMinutes.default;

function differenceInMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$34, param, param$1);
}

var partial_arg$35 = SetMinutes.default;

function setMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$35, param, param$1);
}

var partial_arg$36 = IsSameMinute.default;

function isSameMinute(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$36, param, param$1);
}

var partial_arg$37 = SubMinutes.default;

function subMinutes(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$37, param, param$1);
}

var partial_arg$38 = AddHours.default;

function addHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$38, param, param$1);
}

var partial_arg$39 = DifferenceInHours.default;

function differenceInHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$39, param, param$1);
}

var partial_arg$40 = SetHours.default;

function setHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$40, param, param$1);
}

var partial_arg$41 = IsSameHour.default;

function isSameHour(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$41, param, param$1);
}

var partial_arg$42 = SubHours.default;

function subHours(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$42, param, param$1);
}

var partial_arg$43 = SetDay.default;

function setDay(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$43, param, param$1);
}

var partial_arg$44 = SetDayWithOptions.setDayWithOptions;

function setDayWithOptions(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$44, param, param$1);
}

var partial_arg$45 = SetISODay.default;

function setISODay(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$45, param, param$1);
}

var partial_arg$46 = AddWeeks.default;

function addWeeks(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$46, param, param$1);
}

var partial_arg$47 = DifferenceInWeeks.default;

function differenceInWeeks(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$47, param, param$1);
}

var partial_arg$48 = SetWeek.default;

function setWeek(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$48, param, param$1);
}

var partial_arg$49 = IsSameWeek.default;

function isSameWeek(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$49, param, param$1);
}

var partial_arg$50 = SubWeeks.default;

function subWeeks(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$50, param, param$1);
}

var partial_arg$51 = AddMonths.default;

function addMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$51, param, param$1);
}

var partial_arg$52 = DifferenceInMonths.default;

function differenceInMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$52, param, param$1);
}

var partial_arg$53 = DifferenceInCalendarMonths.default;

function differenceInCalendarMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$53, param, param$1);
}

var partial_arg$54 = SetMonth.default;

function setMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$54, param, param$1);
}

var partial_arg$55 = IsSameMonth.default;

function isSameMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$55, param, param$1);
}

var partial_arg$56 = SubMonths.default;

function subMonths(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$56, param, param$1);
}

var partial_arg$57 = IsFirstDayOfMonth.default;

function isFirstDayOfMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$57, param, param$1);
}

var partial_arg$58 = IsLastDayOfMonth.default;

function isLastDayOfMonth(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$58, param, param$1);
}

var partial_arg$59 = AddYears.default;

function addYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$59, param, param$1);
}

var partial_arg$60 = DifferenceInYears.default;

function differenceInYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$60, param, param$1);
}

var partial_arg$61 = DifferenceInCalendarYears.default;

function differenceInCalendarYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$61, param, param$1);
}

var partial_arg$62 = SetYear.default;

function setYear(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$62, param, param$1);
}

var partial_arg$63 = IsSameYear.default;

function isSameYear(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$63, param, param$1);
}

var partial_arg$64 = SubYears.default;

function subYears(param, param$1) {
  return ReasonDateFnsCurryHelpers$ReasonDateFns.curry2(partial_arg$64, param, param$1);
}

exports.Locales = Locales;
exports.closestIndexTo = closestIndexTo;
exports.formatWithOptions = formatWithOptions;
exports.format = format;
exports.closestTo = closestTo;
exports.compareAsc = compareAsc;
exports.compareDesc = compareDesc;
exports.formatDistance = formatDistance;
exports.formatDistanceWithOptions = formatDistanceWithOptions;
exports.formatDistanceStrict = formatDistanceStrict;
exports.formatDistanceStrictWithOptions = formatDistanceStrictWithOptions;
exports.formatRelative = formatRelative;
exports.isAfter = isAfter;
exports.isBefore = isBefore;
exports.isEqual = isEqual;
exports.lightFormat = lightFormat;
exports.parse = parse;
exports.addBusinessDays = addBusinessDays;
exports.addDays = addDays;
exports.differenceInBusinessDays = differenceInBusinessDays;
exports.differenceInCalendarDays = differenceInCalendarDays;
exports.differenceInDays = differenceInDays;
exports.isSameDay = isSameDay;
exports.setDayOfYear = setDayOfYear;
exports.subDays = subDays;
exports.addMilliseconds = addMilliseconds;
exports.differenceInMilliseconds = differenceInMilliseconds;
exports.setMilliseconds = setMilliseconds;
exports.subMilliseconds = subMilliseconds;
exports.addSeconds = addSeconds;
exports.differenceInSeconds = differenceInSeconds;
exports.setSeconds = setSeconds;
exports.isSameSecond = isSameSecond;
exports.subSeconds = subSeconds;
exports.addMinutes = addMinutes;
exports.differenceInMinutes = differenceInMinutes;
exports.setMinutes = setMinutes;
exports.isSameMinute = isSameMinute;
exports.subMinutes = subMinutes;
exports.addHours = addHours;
exports.differenceInHours = differenceInHours;
exports.setHours = setHours;
exports.isSameHour = isSameHour;
exports.subHours = subHours;
exports.setDay = setDay;
exports.setDayWithOptions = setDayWithOptions;
exports.setISODay = setISODay;
exports.addWeeks = addWeeks;
exports.differenceInWeeks = differenceInWeeks;
exports.setWeek = setWeek;
exports.isSameWeek = isSameWeek;
exports.subWeeks = subWeeks;
exports.addMonths = addMonths;
exports.differenceInMonths = differenceInMonths;
exports.differenceInCalendarMonths = differenceInCalendarMonths;
exports.setMonth = setMonth;
exports.isSameMonth = isSameMonth;
exports.subMonths = subMonths;
exports.isFirstDayOfMonth = isFirstDayOfMonth;
exports.isLastDayOfMonth = isLastDayOfMonth;
exports.addYears = addYears;
exports.differenceInYears = differenceInYears;
exports.differenceInCalendarYears = differenceInCalendarYears;
exports.setYear = setYear;
exports.isSameYear = isSameYear;
exports.subYears = subYears;
/* partial_arg Not a pure module */
